name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: [ubuntu-latest]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: cam
        ports: ['3306:3306']
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      - name: Verify unittest DB exists        
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -uroot -e "SHOW DATABASES LIKE 'cam'"
      - name: Create 2nd Database
        run: mysql --host 127.0.0.1 --port 3306 -uroot -e "CREATE DATABASE IF NOT EXISTS qr;"
      - name: Verify unittest_second DB exists
        run: mysql --host 127.0.0.1 --port 3306 -uroot -e "SHOW DATABASES LIKE 'qr'"
      - name: Set up python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        env:
          DEBUG: off
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          QR_DB_URL: ${{ secrets.QR_DB_URL }}
        run: python manage.py migrate
      - name: 'Run PEP8'
        uses: quentinguidee/pep8-action@v1
        with:
          arguments: '--max-line-length=120 --ignore=E501'
      - name: Run tests
        env:
          DEBUG: off
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          QR_DB_URL: ${{ secrets.QR_DB_URL }}
        run: coverage run manage.py test
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2